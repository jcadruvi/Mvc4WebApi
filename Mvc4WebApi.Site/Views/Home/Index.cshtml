@using System.Web.Optimization
@model Mvc4.WebApi.Models.StoreViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    @Html.ActionLink("View API", "Index", "Help", new { area = "" }, null)
</div>
<br />
<div id="storeGrid"></div>

<section data-bind="visible: showDetail" style="display: none">

    @{ Html.EnableClientValidation(); }

    @using (Html.BeginForm("StoreApi/Store", "api", FormMethod.Post, new { id = "storesForm" }))
    {

        <input class="k-button storeButton" type="submit" value="Save" />

        <input class="k-button storeButton" data-bind="click: onDeleteClick" type="button" value="Delete" />

        <div>
            <div class="storeLine">
                <span class="storeLabels">Retailer</span>
                <span>
                    @Html.TextBoxFor(model => model.RetailerId, new { @id = "retailer" })
                </span>
            </div>
            <div>@Html.ValidationMessageFor(model => model.RetailerId)</div>
            <div class="storeLine">
                <span class="storeLabels">Store Id</span>
                <span>
                    @Html.TextBoxFor(model => model.Id, new { @class = "k-textbox", data_bind = "value: id" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.Id)</div>
            <div class="storeLine">
                <span class="storeLabels">Name</span>
                <span>
                    @Html.TextBoxFor(model => model.Name, new { @class = "k-textbox", data_bind = "value: name" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.Name)</div>
            <div class="storeLine">
                <span class="storeLabels">Number</span>
                <span>
                    @Html.TextBoxFor(model => model.Number, new { @class = "k-textbox", data_bind = "value: number" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.Number)</div>
            <div class="storeLine">
                <span class="storeLabels">City</span>
                <span>
                    @Html.TextBoxFor(model => model.City, new { @class = "k-textbox", data_bind = "value: city" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.City)</div>
            <div class="storeLine">
                <span class="storeLabels">State</span>
                <span>
                    @Html.TextBoxFor(model => model.State, new { @class = "k-textbox", data_bind = "value: state" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.State)</div>
            <div class="storeLine">
                <span class="storeLabels">District</span>
                <span>
                    @Html.TextBoxFor(model => model.DistrictId, new { data_bind="kendoComboBox: { change: districtOptions.change, data: districtData, dataTextField: 'Value', dataValueField: 'Key', value: district }", @id="districtId" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.DistrictId)</div>
            <div class="storeLine">
                <span class="storeLabels">Territory</span>
                <span>
                    @Html.TextBoxFor(model => model.TerritoryId, new { data_bind = "kendoComboBox: { autoBind: territoryOptions.autoBind, cascadeFrom: territoryOptions.cascadeFrom, data: territoryData, dataTextField: 'Value', dataValueField: 'Key', value: territory }" })
                </span>
            </div>
            <div class="storeLine">@Html.ValidationMessageFor(model => model.TerritoryId)</div>
            <div class="storeLine">
                <span class="storeLabels">Sales</span>
                <span>
                    @Html.TextBoxFor(model => model.Sales, new { data_bind = "kendoNumericTextBox: { format: 'c', value: sales }" })
                </span>
            </div>
            <div class="storeLine">
                <span class="storeLabels">Latitude</span>
                <span>
                    @Html.TextBoxFor(model => model.Latitude, new { data_bind = "kendoNumericTextBox: { value: latitude }" })
                        </span>
            </div>
            <div class="storeLine">
                <span class="storeLabels">Longitude</span>
                <span>
                    @Html.TextBoxFor(model => model.Longitude, new { data_bind = "kendoNumericTextBox: { value: longitude }" })
                </span>
            </div>
        </div>
    }

</section>

@section scripts {

@Scripts.Render("~/Scripts/store.javascript")

<script type="text/javascript">
    (function () {
        var viewModel = storeViewModel();
        $('#storesForm').ajaxForm({
            dataType: 'json',
            iframe: false,
            success: viewModel.onStoreSuccess,
            type: 'POST'

        });
        $('#retailer').kendoComboBox({
            dataTextField: 'Value',
            dataValueField: 'Key',
            dataSource: {
                type: "json",
                transport: {
                    read: function (options) {
                        $.ajax({
                            url: "api/RetailerApi/Retailers",
                            success: function (result) {
                                options.success(result);
                            },
                            type: "GET"
                        });
                    }
                }
            }
        });
        viewModel.retailerIdCombo = $('#retailer').data('kendoComboBox');
        $("#storeGrid").kendoGrid({
            autoBind: true,
            change: function() {
                viewModel.onStoreGridChanged();
            },
            filterable: false,
            groupable: false,
            height: "300px",
            pageable: true,
            resizeable: true,
            selectable: "single, row",
            sortable: {
                mode: "single",
                allowUnsort: false
            },
            dataSource: {
                pageSize: 30,
                type: "json",
                transport: {
                    read: function (options) {
                        $.ajax({
                            url: "api/StoreApi/Stores",
                            success: function (result) {
                                options.success(result);
                            },
                            type: "GET"
                        });
                    }
                },
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "string" },
                            RetailerId: { type: "number" },
                            RetailerName: { type: "string" },
                            Name: { type: "string" },
                            Number: { type: "string" },
                            City: { type: "string" },
                            State: { type: "string" },
                            DistrictName: { type: "string" },
                            DistrictId: { type: "string" },
                            TerritoryName: { type: "string" },
                            TerritoryId: { type: "string" }
                        }
                    }
                }
            },
            columns: [{
                    field: "RetailerName",
                    title: "Retailer Name",
                    width: "120px"
                },
                {
                    field: "Id",
                    title: "Store Id",
                    width: "70px"
                },
                {
                    field: "Name",
                    title: "Name",
                    width: "180px"
                }, {
                    field: "Number",
                    title: "Number",
                    width: "90px"
                }, {
                    field: "City",
                    title: "City",
                    width: "190px"
                }, {
                    field: "State",
                    title: "State",
                    width: "60px"
                }, {
                    field: "DistrictName",
                    title: "District",
                    width: "120px"
                }, {
                    field: "TerritoryName",
                    title: "Territory",
                    width: "120px"
                }]
        });
        viewModel.storeGridData = $('#storeGrid').data('kendoGrid');
        searchRow = $('<tr>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: retailerNameSearch" style="width:100%;" /></span></td>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: idSearch" style="width:100%;" /></span></td>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: nameSearch" style="width:100%;" /></span></td>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: numberSearch" style="width:100%;" /></span></td>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: citySearch" style="width:100%;" /></span></td>' +
                  '<td><span class="k-widget k-autocomplete k-header k-state-default"><input class="k-input" type="search" data-bind="value: stateSearch"   style="width:100%;" /></span></td>' +
                  '<td><input class="mobitorGridFilteredDropdownSearch mobitorSearch" id="searchDistrict" data-bind="kendoComboBox: { change: onDistrictSearchChange, data: districtData, dataTextField: \'Value\', dataValueField: \'Key\', widget: districtSearchWidget }" style="width:100%;" /></td>' +
                  '<td><input class="mobitorGridFilteredDropdownSearch mobitorSearch" id="searchTerritory" }" style="width:100%;" /></td>' +
                  '</tr>');
        viewModel.storeGridData.thead.append(searchRow);
        ko.applyBindings(viewModel);
        $('#searchTerritory').kendoComboBox({
            autoBind: false,
            cascadeFrom: "searchDistrict",
            change: function() {
                viewModel.filterStores();
            },
            dataTextField: "Value",
            dataValueField: "Key",
            dataSource: {
                serverFiltering: true,
                type: "json",
                transport: {
                    read: function (options) {
                        var postData = {};
                        postData.DistrictId = viewModel.districtSearchWidget().value();
                        $.ajax({
                            data: postData,
                            dataType: 'json',
                            url: "api/TerritoryApi/Territories",
                            success: function (result) {
                                options.success(result);
                            },
                            type: "GET"
                        });
                    }
                }
            },
            filter: "contains",
            suggest: true
        });
        viewModel.$searchTerritoryData = $('#searchTerritory').data('kendoComboBox');
        $(document).ready(function () {
            $(".mobitorGridFilteredDropdownSearch").closest(".k-widget").css("width", "92%");
            $(".mobitorGridFilteredDropdownSearch").closest(".k-widget").find(".k-dropdown-wrap").css("width", "82%");
            $('section .k-combobox').css('width', '170px');
            $('section .k-numerictextbox').css('width', '170px');
        });
    })();
    
    
</script>

}